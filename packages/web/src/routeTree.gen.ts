/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as IndexImport } from './routes/index'
import { Route as NotesLayoutImport } from './routes/notes/_layout'
import { Route as NotesLayoutIndexImport } from './routes/notes/_layout/index'
import { Route as NotesLayoutEmptyImport } from './routes/notes/_layout/empty'
import { Route as NotesLayoutCreateImport } from './routes/notes/_layout/create'
import { Route as NotesLayoutViewIdImport } from './routes/notes/_layout/view/$id'
import { Route as NotesLayoutEditIdImport } from './routes/notes/_layout/edit/$id'

// Create Virtual Routes

const NotesImport = createFileRoute('/notes')()

// Create/Update Routes

const NotesRoute = NotesImport.update({
  path: '/notes',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NotesLayoutRoute = NotesLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => NotesRoute,
} as any)

const NotesLayoutIndexRoute = NotesLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => NotesLayoutRoute,
} as any)

const NotesLayoutEmptyRoute = NotesLayoutEmptyImport.update({
  path: '/empty',
  getParentRoute: () => NotesLayoutRoute,
} as any)

const NotesLayoutCreateRoute = NotesLayoutCreateImport.update({
  path: '/create',
  getParentRoute: () => NotesLayoutRoute,
} as any)

const NotesLayoutViewIdRoute = NotesLayoutViewIdImport.update({
  path: '/view/$id',
  getParentRoute: () => NotesLayoutRoute,
} as any)

const NotesLayoutEditIdRoute = NotesLayoutEditIdImport.update({
  path: '/edit/$id',
  getParentRoute: () => NotesLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/notes': {
      id: '/notes'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesImport
      parentRoute: typeof rootRoute
    }
    '/notes/_layout': {
      id: '/notes/_layout'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesLayoutImport
      parentRoute: typeof NotesRoute
    }
    '/notes/_layout/create': {
      id: '/notes/_layout/create'
      path: '/create'
      fullPath: '/notes/create'
      preLoaderRoute: typeof NotesLayoutCreateImport
      parentRoute: typeof NotesLayoutImport
    }
    '/notes/_layout/empty': {
      id: '/notes/_layout/empty'
      path: '/empty'
      fullPath: '/notes/empty'
      preLoaderRoute: typeof NotesLayoutEmptyImport
      parentRoute: typeof NotesLayoutImport
    }
    '/notes/_layout/': {
      id: '/notes/_layout/'
      path: '/'
      fullPath: '/notes/'
      preLoaderRoute: typeof NotesLayoutIndexImport
      parentRoute: typeof NotesLayoutImport
    }
    '/notes/_layout/edit/$id': {
      id: '/notes/_layout/edit/$id'
      path: '/edit/$id'
      fullPath: '/notes/edit/$id'
      preLoaderRoute: typeof NotesLayoutEditIdImport
      parentRoute: typeof NotesLayoutImport
    }
    '/notes/_layout/view/$id': {
      id: '/notes/_layout/view/$id'
      path: '/view/$id'
      fullPath: '/notes/view/$id'
      preLoaderRoute: typeof NotesLayoutViewIdImport
      parentRoute: typeof NotesLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  SettingsRoute,
  NotesRoute: NotesRoute.addChildren({
    NotesLayoutRoute: NotesLayoutRoute.addChildren({
      NotesLayoutCreateRoute,
      NotesLayoutEmptyRoute,
      NotesLayoutIndexRoute,
      NotesLayoutEditIdRoute,
      NotesLayoutViewIdRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/settings",
        "/notes"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/notes": {
      "filePath": "notes",
      "children": [
        "/notes/_layout"
      ]
    },
    "/notes/_layout": {
      "filePath": "notes/_layout.tsx",
      "parent": "/notes",
      "children": [
        "/notes/_layout/create",
        "/notes/_layout/empty",
        "/notes/_layout/",
        "/notes/_layout/edit/$id",
        "/notes/_layout/view/$id"
      ]
    },
    "/notes/_layout/create": {
      "filePath": "notes/_layout/create.tsx",
      "parent": "/notes/_layout"
    },
    "/notes/_layout/empty": {
      "filePath": "notes/_layout/empty.tsx",
      "parent": "/notes/_layout"
    },
    "/notes/_layout/": {
      "filePath": "notes/_layout/index.tsx",
      "parent": "/notes/_layout"
    },
    "/notes/_layout/edit/$id": {
      "filePath": "notes/_layout/edit/$id.tsx",
      "parent": "/notes/_layout"
    },
    "/notes/_layout/view/$id": {
      "filePath": "notes/_layout/view/$id.tsx",
      "parent": "/notes/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
